import { useState } from 'react';
import { Box, Button, Stack, Typography } from '@mui/material';
import './App.css';

const hydraulicsQuestions = [
    '1. Использование гидравлических приводов в технике.',
    '2. Типы гидросистем. Стационарный и мобильный гидропривод. Закрытый и открытый гидропривод.',
    '3. Классификация гидроаппаратов, их основные характеристики.',
    '4. Шестеренные насосы с внешним и внутренним зацеплением.',
    '5. Аксиально-поршневые машины.',
    '6. Радиально-поршневые машины.',
    '7. Пластинчатые машины.',
    '8. Явление кавитации и его влияние на конструкцию насосных установок.',
    '9. Гидравлические цилиндры одностороннего действия.',
    '10. Гидравлические цилиндры двухстороннего действия.',
    '11. Предохранительные устройства гидравлических систем. Назначение и конструктивные решения.',
    '12. Клаппаный и золотниковый типы гидроаппаратов.',
    '13. Гидравлические распределитель с ручным управлением.',
    '14. Гидравлические распределители прямого действия и распределители с электрогидравлическим управлением.',
    '15. Виды перекрытия золотника и их использование в распределительных устройствах.',
    '16. Редукционный клапан.',
    '17. Типы дроссельных устройств и их использование.',
    '18. Регулятор расхода жидкости.',
    '19. Делители потока жидкости.',
    '20. Обратные клапаны и гидрозамки.',
    '21. Устройство стационарной насосной станции.',
    '22. Конструкции ротаметров.',
    '23. Гидроаккумулятор. Конструкция и области использования.',
    '24. Установка фильтров в гидравлических системах.',
    '25. Мобильный гидропривод.'
];

const pneumaticsQuestions = [
    '1. Области использования пневматических приводов, достоинства и недостатки пневматических приводов.',
    '2. Физические свойства воздуха. Влажность воздуха.',
    '3. Классификация компрессоров. Поршневые и винтовые компрессоры.',
    '4. Основные принципы осушки воздуха.',
    '5. Структура пневматических систем. Классификация исполнительных устройств.',
    '6. Линейные пневматические цилиндры. Виды, конструктивные решения.',
    '7. Стандарты в области пневматических цилиндров.',
    '8. Пневматические цилиндры с противоповоротными платформами.',
    '9. Плоские пневматические цилиндры. Возможности их компоновки.',
    '10. Пневматические цилиндры с блокировкой штока.',
    '11. Бесштоковые цилиндры. Конструкция и области использования.',
    '12. Поворотные приводы. Конструкция и области использования.',
    '13. Основные типы запорных элементов распределительных устройств.',
    '14. Конструкция пневмоуправляемых распределителей.',
    '15. Электроуправляемые пневматические распределители.',
    '16. Пневматические распределители с пилотным управлением.',
    '17. Пневматические распределители с "пневматической" пружиной.',
    '18. Трехпозиционные пневматические распределители.',
    '19. Распределители стандарта ISO.',
    '20. Пневмоострова.',
    '21. Пневматические распределители с ручным дублированием.',
    '22. Пневматические распределители моностабильные и бистабильные.',
    '23. Клапан быстрого выхлопа.',
    '24. Очистка сжатого воздуха. Фильтры.',
    '25. Пневматические регуляторы давления.'
];


function App() {
    const deck = [...Array(10)].map((_, i) => ({ id: i, text: `Карточка ${i + 1}` }));
    const [selectedCard, setSelectedCard] = useState<{ hydraulics: string; pneumatics: string } | null>(null);
    const [shuffling, setShuffling] = useState(false);


    const generateTicket = () => {
        const randomHydraulics = hydraulicsQuestions[Math.floor(Math.random() * hydraulicsQuestions.length)];
        const randomPneumatics = pneumaticsQuestions[Math.floor(Math.random() * pneumaticsQuestions.length)];

        setShuffling(true);

        setTimeout(() => {
            setShuffling(false);
            setSelectedCard({ hydraulics: randomHydraulics, pneumatics: randomPneumatics });
        }, 2000);
    };

    return (
        <Box
            sx={{
                height: '100vh',
                display: 'flex',
                justifyContent: 'center',
                alignItems: 'center',
                flexDirection: 'column',
            }}
        >
            <Stack spacing={2} sx={{ marginBottom: 4 }}>
                <Button variant="contained" color="primary" onClick={generateTicket} disabled={shuffling}>
                    Сгенерировать билет
                </Button>
            </Stack>
            <Box className="deck-container">
                {shuffling &&
                    deck.map((card, i) => (
                        <div key={card.id} className="card" style={{ animationDelay: `${i * 0.1}s` }}>
                            Крутим-вертим твою пятерку
                        </div>
                    ))}
                {selectedCard && !shuffling && (
                    <div className="selected-card">
                        <Typography variant="h6">Гидравлика:</Typography>
                        <Typography>{selectedCard.hydraulics}</Typography>
                        <Typography variant="h6" sx={{ marginTop: 2 }}>
                            Пневматика:
                        </Typography>
                        <Typography>{selectedCard.pneumatics}</Typography>
                    </div>
                )}
            </Box>
        </Box>
    );
}

export default App;
